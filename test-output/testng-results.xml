<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="0" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="172" started-at="2023-01-03T08:04:53Z" finished-at="2023-01-03T08:04:53Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.runner@222114ba]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="172" started-at="2023-01-03T08:04:53Z" finished-at="2023-01-03T08:04:53Z">
      <class name="runner.runner">
        <test-method status="FAIL" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.runner@222114ba]" name="setUpClass" is-config="true" duration-ms="125" started-at="2023-01-03T08:04:53Z" finished-at="2023-01-03T08:04:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@223d2c72]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The glue path contained invalid identifiers ./BDD/src/test/java/StepDotFile/LoginToApp.java]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The glue path contained invalid identifiers ./BDD/src/test/java/StepDotFile/LoginToApp.java
at io.cucumber.core.feature.GluePath.parseAssumeClasspathScheme(GluePath.java:87)
at io.cucumber.core.feature.GluePath.parse(GluePath.java:60)
at io.cucumber.core.options.CucumberOptionsAnnotationParser.addGlue(CucumberOptionsAnnotationParser.java:127)
at io.cucumber.core.options.CucumberOptionsAnnotationParser.parse(CucumberOptionsAnnotationParser.java:45)
at io.cucumber.testng.TestNGCucumberRunner.<init>(TestNGCucumberRunner.java:85)
at io.cucumber.testng.AbstractTestNGCucumberTests.setUpClass(AbstractTestNGCucumberTests.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.runner@222114ba]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2023-01-03T08:04:53Z" finished-at="2023-01-03T08:04:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.runner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
